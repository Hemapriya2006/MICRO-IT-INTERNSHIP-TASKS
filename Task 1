/*Quiz Game

A Quiz Game is an interactive application that presents users with multiple-choice questions to test their
knowledge on various topics. It tracks scores, provides feedback at the end, and may include features like
timers, categories, and answer reviews.*/

import java.util.*;
import java.util.concurrent.*;
public class QuizGame {
    static class Question {
        String category;
        String question;
        String[] options;
        int correctOption;
        Question(String category, String question, String[] options, int correctOption) {
            this.category = category;
            this.question = question;
            this.options = options;
            this.correctOption = correctOption;
        }
    }
    static class AnswerRecord {
        Question question;
        int userAnswer;
        AnswerRecord(Question question, int userAnswer) {
            this.question = question;
            this.userAnswer = userAnswer;
        }
    }
    private static final List<Question> questions = new ArrayList<>();
    public static void main(String[] args) {
        loadQuestions();
        Scanner sc = new Scanner(System.in);
        System.out.println("Welcome to the Quiz Game!");
        System.out.println("Select a category:");
        System.out.println("1. Literature");
        System.out.println("2. History");
        System.out.println("3. Science");
        System.out.println("4. Sports");
        int choice = 0;
        while (choice < 1 || choice > 4) {
            System.out.print("Enter choice (1-4): ");
            try {
                choice = Integer.parseInt(sc.nextLine());
            } catch (Exception e) {
                choice = 0;
            }
        }
        String category;
        switch (choice) {
            case 1: category = "Literature"; break;
            case 2: category = "History"; break;
            case 3: category = "Science"; break;
            case 4: category = "Sports"; break;
            default: category = "Science"; break;
        }
        List<Question> quiz = getRandomQuestions(category, 10);
        List<AnswerRecord> review = new ArrayList<>();
        int score = 0;
        System.out.println("\nYou selected: " + category);
        System.out.println("Each question has a 15-second timer. Good luck!\n");
        for (int i = 0; i < quiz.size(); i++) {
            Question q = quiz.get(i);
            System.out.println("Q" + (i + 1) + ": " + q.question);
            for (int j = 0; j < q.options.length; j++) {
                System.out.println((j + 1) + ". " + q.options[j]);
            }
            int answer = timedAnswerInput(15);
            review.add(new AnswerRecord(q, answer));
            if (answer == -1) {
                System.out.println(" Time's up! Correct answer: " + (q.correctOption + 1));
            } else if (answer - 1 == q.correctOption) {
                System.out.println(" Correct!");
                score++;
            } else {
                System.out.println(" Wrong! Correct answer: " + (q.correctOption + 1));
            }
            System.out.println();
        }
        System.out.println(" Quiz Over!");
        System.out.println("Your score: " + score + " out of " + quiz.size());
        // Review Section
        System.out.println("\n Review:");
        for (int i = 0; i < review.size(); i++) {
            AnswerRecord ar = review.get(i);
            System.out.println("Q" + (i + 1) + ": " + ar.question.question);
            System.out.println("Your answer: " + (ar.userAnswer == -1 ? "No answer" : ar.userAnswer + ". " + ar.question.options[ar.userAnswer - 1]));
            System.out.println("Correct answer: " + (ar.question.correctOption + 1) + ". " + ar.question.options[ar.question.correctOption]);
            System.out.println();
        }
        sc.close();
    }
    private static int timedAnswerInput(int seconds) {
        ExecutorService executor = Executors.newSingleThreadExecutor();
        Future<String> future = executor.submit(() -> new Scanner(System.in).nextLine());
        try {
            System.out.print("Your answer (1-4): ");
            String input = future.get(seconds, TimeUnit.SECONDS);
            int answer = Integer.parseInt(input);
            if (answer >= 1 && answer <= 4) {
                return answer;
            }
        } catch (TimeoutException e) {
            System.out.println("\n⚠️ You took too long!");
        } catch (Exception ignored) {}
        future.cancel(true);
        executor.shutdownNow();
        return -1;
    }
    private static List<Question> getRandomQuestions(String category, int count) {
        List<Question> filtered = new ArrayList<>();
        for (Question q : questions) {
            if (q.category.equalsIgnoreCase(category)) {
                filtered.add(q);
            }
        }
        Collections.shuffle(filtered);
        return filtered.subList(0, Math.min(count, filtered.size()));
    }

    private static void loadQuestions() {
        // Science
        questions.add(new Question("Science", "What planet is known as the Red Planet?", new String[]{"Mars", "Venus", "Jupiter", "Saturn"}, 0));
        questions.add(new Question("Science", "What gas do plants absorb?", new String[]{"Oxygen", "Carbon Dioxide", "Nitrogen", "Hydrogen"}, 1));
        questions.add(new Question("Science", "Speed of light?", new String[]{"150,000 km/s", "299,792 km/s", "1,000 km/s", "3,000 km/s"}, 1));
        questions.add(new Question("Science", "What is the powerhouse of the cell?", new String[]{"Nucleus", "Ribosome", "Mitochondria", "Chloroplast"}, 2));
        questions.add(new Question("Science", "Which element has the symbol 'O'?", new String[]{"Osmium", "Oxygen", "Oxide", "Olite"}, 1));
        questions.add(new Question("Science", "What is the boiling point of water?", new String[]{"100°C", "0°C", "50°C", "200°C"}, 0));
        
        // Literature
        questions.add(new Question("Literature", "Author of 'Pride and Prejudice'?", new String[]{"Jane Austen", "Dickens", "Twain", "Orwell"}, 0));
        questions.add(new Question("Literature", "Who wrote 'Harry Potter'?", new String[]{"Tolkien", "Lewis", "Rowling", "King"}, 2));
        questions.add(new Question("Literature", "Who wrote 'Romeo and Juliet'?", new String[]{"Shakespeare", "Keats", "Hemingway", "Frost"}, 0));
        questions.add(new Question("Literature", "Famous work of George Orwell?", new String[]{"1984", "Dune", "Frankenstein", "It"}, 0));
        questions.add(new Question("Literature", "What type of novel is 'Dracula'?", new String[]{"Romance", "Science Fiction", "Gothic Horror", "Comedy"}, 2));
    
        // History
        questions.add(new Question("History", "When did WWII end?", new String[]{"1939", "1945", "1918", "1965"}, 1));
        questions.add(new Question("History", "First President of USA?", new String[]{"Lincoln", "Jefferson", "Washington", "Adams"}, 2));
        questions.add(new Question("History", "Who was known as 'The Iron Lady'?", new String[]{"Indira Gandhi", "Angela Merkel", "Margaret Thatcher", "Golda Meir"}, 2));
        questions.add(new Question("History", "Fall of Berlin Wall?", new String[]{"1980", "1989", "1971", "1995"}, 1));
        questions.add(new Question("History", "Who discovered America?", new String[]{"Vasco da Gama", "Christopher Columbus", "Marco Polo", "Cook"}, 1));
        questions.add(new Question("History", "What empire built the Colosseum?", new String[]{"Greek", "Roman", "Persian", "Mongol"}, 1));
    
        // Sports
        questions.add(new Question("Sports", "How many players in soccer team?", new String[]{"10", "11", "9", "12"}, 1));
        questions.add(new Question("Sports", "What sport uses 'home run'?", new String[]{"Basketball", "Cricket", "Baseball", "Tennis"}, 2));
        questions.add(new Question("Sports", "Olympic Games held every?", new String[]{"2 years", "3 years", "4 years", "5 years"}, 2));
        questions.add(new Question("Sports", "Who is known as 'The King of Football'?", new String[]{"Messi", "Ronaldo", "Maradona", "Pelé"}, 3));
        questions.add(new Question("Sports", "Which country has won the most FIFA World Cups?", new String[]{"Germany", "Brazil", "Italy", "Argentina"}, 1));
        questions.add(new Question("Sports", "Which sport uses a shuttlecock?", new String[]{"Squash", "Tennis", "Badminton", "Cricket"}, 2));
    }
    
}
